// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Franchisee {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  users User[]  @relation("UserFranchisees")
}

model Role {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  users User[]
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  roleId      Int?
  role        Role?          @relation(fields: [roleId], references: [id])
  password    String? 
  permissions Permission[]  // Relation to permissions
  franchisees Franchisee[]  @relation("UserFranchisees")
  isActive    Boolean  @default(true)
}

model Page {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  path        String
  isActive    Boolean       @default(true)
  permissions Permission[]  // Relation to permissions
}

model Permission {
  id       Int     @id @default(autoincrement())
  user     User    @relation(fields: [userId], references: [id])
  userId   Int
  page     Page    @relation(fields: [pageId], references: [id])
  pageId   Int
  canView  Boolean @default(false)

  @@unique([userId, pageId])  // Prevent duplicate permission rows
}
